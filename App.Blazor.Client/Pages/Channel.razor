@page "/channel/{Id}"
@page "/c/{Id}"

@using App.Business.Model
@using App.Blazor.Client.Data
@inject IDataProviderApi _api

<PageTitle>@channel.Title | 遇见时光-1023.org.cn</PageTitle>
<HeadContent>
    <meta name="description" content="@channel.Description">
</HeadContent>

@foreach (var article in articles)
{
    <div class="article-list-section" >
        <h3 class="article-title"><a href="/p/@article.Id" target="_blank">@article.Title</a></h3>
        <span class="article-pic">
            @if (@article.File != null)
            {<a href="/p/@article.Id" title=""><img src="@Path.Combine(article.File.Path, article.File.Name)"></a>}
        </span>
        <p class="article-summary">@article.Summary</p>
        <div class="article-info" style="@(article.File !=null ? "margin-top:80px" : "" )">
            <ul>
                <li class="author"><a>@article.Author</a></li>
                <li class="channel"><a href="/c/@article.ChannelId">@article.ChannelName</a></li>
                <li class="time">@($"{article.Created:yyyy年M月d日 HH:mm}")</li>
                <li class="views"><span>@article.Viewed</span> 阅读</li>
                <li class="hot"><span>@article.CommentCount</span> 评论</li>
            </ul>
        </div>
    </div>
}
<Button block size="large" @onclick="GetArticles">加载更多</Button>

@code {
    [Parameter]
    public string? id { get; set; }
    private int page = 1;
    private ChannelModel? channel { get; set; }
    private ArticleQueryModel query = new () { PageSize = 20 };
    private List<ArticleListModel> articles = new ();

    protected override async Task OnParametersSetAsync()
    {
        if (!string.IsNullOrWhiteSpace(id))
        {
            page = default;
            articles.Clear();
            query.ChannelId = id;
            channel = await _api.GetChannelAsync(id);
            await GetArticles();
        }
    }

    private async Task GetArticles()
    {
        query.ChannelId = id;
        query.PageIndex = page++;
        var data = (await _api.GetArticlesAsync(query)).Data;
        articles.AddRange(data);
    }
}
