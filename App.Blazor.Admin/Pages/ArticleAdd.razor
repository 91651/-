@page "/admin/article/add"
@attribute [Authorize]
@using System.ComponentModel
@using AntDesign.TableModels
@using Microsoft.AspNetCore.Authorization
@using Vditor.Models
@using App.Business.Model
@inject IJSRuntime _jsRuntime

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/vditor@3.4.7/dist/index.css" />

<PageTitle>Index</PageTitle>

<Card Hoverable>
    <Form Model="@model"
          OnFinish="OnFinish"
          OnFinishFailed="OnFinishFailed"
          LabelColSpan="4"
          WrapperColSpan="16">
        <FormItem Label="标题">
            <Input @bind-Value="@context.Title" />
        </FormItem>
        <FormItem Label="副标题">
            <Input @bind-Value="@context.SubTitle" />
        </FormItem>
        <FormItem Label="栏目">
        </FormItem>
        <FormItem Label="来源">
            <Input @bind-Value="@context.Author" />
        </FormItem>
        <FormItem Label="简介">
            <Input @bind-Value="@context.Summary" />
        </FormItem>
        <FormItem Label="内容">
            @encodedModeItems
        </FormItem>
    </Form>
</Card>

@code {
    private Toolbar Toolbar = new ();
    private ArticleModel model = new();
    protected override async Task OnInitializedAsync()
    {
        Console.WriteLine("------------------------------------OnInitializedAsync");
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        Console.WriteLine("------------------------------------OnAfterRenderAsync");
        var vditor = "https://cdn.jsdelivr.net/npm/vditor@3.4.7/dist/index.min.js";
        var vditorBlazor = "/_content/Vditor/vditor-blazor.js";
        await _jsRuntime.InvokeVoidAsync("appLoadJS", vditor);
        await _jsRuntime.InvokeVoidAsync("appLoadJS", vditorBlazor);

        encodedModeItems =
        @<Template>
            <Vditor.Editor Mode="wysiwyg" Height="500" MinHeight="500" />
        </Template>;

        await base.OnAfterRenderAsync(firstRender);
    }

    RenderFragment encodedModeItems =
    @<Template>
    </Template>;


    private async Task OnFinish()
    {
        
    }

    private async Task OnFinishFailed()
    {

    }

}